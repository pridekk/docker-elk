
# Create your own password:
	# http://www.itzgeek.com/how-tos/linux/centos-how-tos/configure-kibana-4-with-nginx-securing-kibana-4-centos-7.html
	# htpasswd -c proxy-conf/kibana.htpasswd admin
	# login: admin | password: Kibana05
	
# Create keys for SSL access
	# sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout proxy-conf/kibana-cert.key -out proxy-conf/kibana-cert.crt
	
# Run proxy to check the config:
	# docker run --rm --link elk_kibana_1:kibana -p 5600 -v $PWD/proxy-conf:/etc/nginx/conf.d --name proxy nginx:1.9.3

# 5600 : access kibana via proxy (redirected to ssl) with password
# 5601 : defaut and direct access to kibana without password (--> to be firewalled from public access)

#daemon off;

upstream kibana  {
      server dockerelk_kibana_1:5601;
}

### We can access only in ssl + password on 5600
server {
	listen 			5600;
	
	ssl on;
	ssl_certificate	/etc/nginx/conf.d/kibana-cert.crt;
	ssl_certificate_key	/etc/nginx/conf.d/kibana-cert.key;
	
	ssl_session_cache builtin:1000  shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

	server_name	$hostname;
	access_log	/var/log/nginx/kibana.access.log;
	error_log	/var/log/nginx/kibana.error.log;
	error_log /dev/stdout info;
	access_log /dev/stdout;

	location / {
		auth_basic "Restricted";
		auth_basic_user_file /etc/nginx/conf.d/kibana.htpasswd;
		proxy_pass http://dockerelk_kibana_1:5601;
	}
}


##NOT USED

### Easy config with password without ssl
#server {
#    listen			5600		default_server;
#    server_name		$hostname;
    
#	location / {
#		auth_basic "Restricted";
#		auth_basic_user_file /etc/nginx/conf.d/kibana.htpasswd;
#		proxy_pass http://kibana;
#	}
#}

### Forward 5600 to 5433 https + password
#server {
#    listen			5600;
#   server_name		_;
#    return 			301 https://$host:5443$request_uri;
#}
